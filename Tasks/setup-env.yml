apiVersion: tekton.dev/v1beta1
kind: Task

metadata:
  name: setup-env

spec:
  description: >-
    This is the task for installing the packages depending on the ecosystem.
  workspaces:
    - name: report
      description: Volume of Workspace where all reports and dependencies are installed
    
  # Task parameters take values from global parameters  
  params:
    - name: language
      description: String value for each language; 1 = Golang, 2 = NPM, 3 = Python, 4 = Java

    - name: file-url
      description: URL of the manifest file

    - name: manifest-file-path
      description: Path of the manifest file to perform analysis.

    - name: pkg-installation-directory-path
      description: Path of a directory in workspace, where dependencies will be installed.

    - name: image
      description: Image of the specific language which is used by CRDA to perform analysis
      

  # Task definition
  steps:
    - name: setup-env
      image: $(params.image)
      script: |
        #!/bin/sh
        mkdir -p $(params.pkg-installation-directory-path)
        curl $(params.file-url) --output $(params.manifest-file-path)

        #Based on the ecosystem install dependencies
        if [ $(params.language) -ne "4" ]
        then
          mv $(params.manifest-file-path) ./$(params.pkg-installation-directory-path)
          cd $(params.pkg-installation-directory-path)

          if [ $(params.language) == "1" ]
          then
            go mod download

          elif [ $(params.language) == "2" ]
          then
            npm install

          else
            mvn install
          fi

          cd ..
          mv ./$(params.pkg-installation-directory-path)/$(params.manifest-file-path) .

        else
          pip3 install --target=$(params.pkg-installation-directory-path) \
          -r $(params.manifest-file-path) --upgrade
        fi